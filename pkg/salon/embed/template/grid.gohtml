{{$data := .}}<!DOCTYPE html>
<html>
<head>
    {{$labsize := .Lab.Size}}
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width,initial-scale=1">
    <link rel="icon" type="image/png" href="./img/sdmllogo.png" size="54x54">
    <link rel="apple-touch-icon" href="./img/sdmllogo.png">
    <meta name="theme-color" content="#ffffff">
    <title>Salon Digital</title>
    <link rel="stylesheet" href="{{.BaseAddr}}static/css/salon.css" type="text/css">
    <style>
        :root {
            --grid-max-width: {{$labsize}};
        }

        {{- $middle := div (sub $labsize 1) 2}}
        /* 3x3 Matrix */
        @media (max-width: 1000px) {
        {{- $min := sub $middle 2}}
        {{- $max := add $min 4}}
            /* {{$middle}} {{$min}} {{$max}} */
        {{- range $i := (iterate $labsize)}}
        {{- range $j := (iterate $labsize)}}
            #lab_{{$i}}_{{$j}} {
        {{- if and (and (gt $i $min) (lt $i $max)) (and (gt $j $min) (lt $j $max))}}
                grid-column: calc({{$j}} - {{$min}} + 1) / span 1;
                grid-row: calc({{$i}} - {{$min}} + 2) / span 1;
                background-color: white;
        {{- else}}
                visibility: hidden;
                display: none;
        {{- end}}
            }
            #lab_{{$i}}_{{$j}} img {
            {{- if and (eq $i $middle) (eq $j $middle)}}
            {{- else}}
                filter: brightness(0.7);
            {{- end}}
            }

        {{- end}}
        {{- end}}
        }
        /* 5x5 Matrix */
        @media (min-width: 1000px) {
        {{- $min = sub $middle 3}}
        {{- $max = add $min 6}}
            /* {{$middle}} {{$min}} {{$max}} */
        {{- range $i := (iterate $labsize)}}
        {{- range $j := (iterate $labsize)}}
            #lab_{{$i}}_{{$j}} {
            {{- if and (and (gt $i $min) (lt $i $max)) (and (gt $j $min) (lt $j $max))}}
                grid-column: calc({{$j}} - {{$min}} + 1) / span 1;
                grid-row: calc({{$i}} - {{$min}} + 2) / span 1;
                background-color: white;
            {{- else}}
                visibility: hidden;
                display: none;
            {{- end}}
            }

            #lab_{{$i}}_{{$j}} img {
            {{- if and (eq $i $middle) (eq $j $middle)}}
            {{- else}}
                filter: brightness(0.9);
            {{- end}}
            }

        {{- end}}
        {{- end}}
        }

    </style>
</head>
<body>
<div>
<div id="sdmlwrapper">
    <div id="gridtopleft" class="center"><img class="pixelated" src="{{.BaseAddr}}img/old-list/tent.png"></div>
    <div id="gridtopcenter" class="center">
        <div style="text-align: center; width: 100%;">wvdc: Navigating SDML, now on (-186185685)</div>
    </div>
    <div id="gridtopright" class="center"><a href=""><img class="pixelated" src="{{.BaseAddr}}static/img/bangbang_mini.png"></a></div>

    <div id="gridmiddleleft"  class="hcenter">
        <table class="navtable">
            <tr><td><img class="pixelated hcenter" src="{{.BaseAddr}}img/old-list/n.png"></td></tr>
            <tr><td><img class="pixelated hcenter" src="{{.BaseAddr}}img/old-list/a.png"></td></tr>
            <tr><td><img class="pixelated hcenter" src="{{.BaseAddr}}img/old-list/c.png"></td></tr>
            <tr><td><img class="pixelated hcenter" src="{{.BaseAddr}}img/old-list/e.png"></td></tr>
            <tr><td><img class="pixelated hcenter" src="{{.BaseAddr}}img/old-list/s.png"></td></tr>
        </table>
    </div>
    <div id="gridlabyrinthheading"></div>
    <div id="gridcontentheading" class="center">
        <div id="direction" style="text-align: center; width: 100%;">go west</div>
    </div>
    <!-- div id="gridlabyrinth"></div -->
    {{- range $i, $row := .Lab.Fields}}
        {{- range $j, $col := $row}}
            <div id="lab_{{$i}}_{{$j}}" class="labcell"><img alt="{{$col}} {{$i}}/{{$j}}" src="{{$data.BaseAddr}}img/labyrinth/{{$col.Name}}.png" class="pixelated"></div>
        {{- end}}
    {{- end}}
    <div id="gridcontent">
        <div id="gridcontenttext">
            <span id="gridcontenttitle" style="font-weight: bold;"></span><br />
            &nbsp;<br />
            <span id="gridcontentauthors"></span><br />
            &nbsp;<br />
            <span id="gridcontentdescription"></span>
        </div>
        <img id="gridcontentimage">
    </div>
    <div id="gridmiddleright2"></div>
    <div id="gridlabyrinthsub"></div>
    <div id="gridcontentsub"></div>

    <div id="gridbottomleft"></div>
    <div id="gridbottomcenter" class="center">
        <div style="text-align: center; width: 100%;">
        Click on the Labyrinth do find your way in SDML. There are Paths,
        crossings and - dead ends, of course. Rooms may be reachable or not - just try!
        </div>
    </div>
    <div id="gridbottomright"></div>
</div>
</div>

<div id="detail" class="modal">
    <div id="detailcontent">
        <div id="detailheader">
            <img style="float: right; width:40px; height: 40px; margin: 20px;" src="{{.BaseAddr}}static/img/Black_close_x.svg">
        </div>
        <iframe id="detailiframe" src="" allowfullscreen ></iframe>
    </div>

</div>

<script src="{{.BaseAddr}}static/js/axios.min.js"></script>
<script>
    let lab = JSON.parse('{{toJson .Lab}}');
    let workActive = false
    let signature = ""

    var detail = document.getElementById("detail")
    var detailiframe = document.getElementById("detailiframe")
    var btn = document.getElementById("gridcontenttext");
    btn.onclick = function() {
        if(workActive) {
            parent.ShowWork(signature)
            /*
            detailiframe.src = detailiframe.dataset.iframe
            detail.style.display = "block";
            detail.style.transition = "all 2s ease-in-out";
            detail.style.height = "100%";
             */
        }
    }
    detail.onclick = function () {
        detail.style.display = "none";
        detail.style.height = "0"
        detailiframe.src = ""
    }

    function getDirection(x, y) {
        let bodyStyle = getComputedStyle(document.body);
        let labSize = parseInt(bodyStyle.getPropertyValue('--grid-max-width'));
        // x == y
        // x == lab.Size-1 - y
        let backY = labSize-1 -y
        let dirStr = "";
        let logStr = labSize+": "+x+"/"+y;
        if( x > y && x < backY ) {
            dirStr = "north";
            logStr += "  "+x+" > "+y+" && "+x+" < "+backY
        } else if( x < y && x < backY ) {
            dirStr = "west";
            logStr += "  "+x+" < "+y+" && "+x+" < "+backY
        } else if( x > y && x > backY ) {
            dirStr = "east";
            logStr +="  "+x+" > "+y+" && "+x+" > "+backY
        } else if( x < y && x > backY ) {
            dirStr = "south";
            logStr += "  "+x+" < "+y+" && "+x+" > "+backY
        } else {
            logStr += "  "+backY
        }
        logStr += " - "+dirStr
        console.log(logStr)
        return dirStr;
    }

    function showDirection(x, y) {
        //let half = (lab.Size-1)/2;
        let dirStr = getDirection(x, y);
        switch( dirStr ) {
            case "north":
                if( !lab.North ) dirStr += " not possible"
                break;
            case "south":
                if( !lab.South ) dirStr += " not possible"
                break;
            case "east":
                if( !lab.East ) dirStr += " not possible"
                break;
            case "west":
                if( !lab.West ) dirStr += " not possible"
                break;
            default:
        }
        if( dirStr != "") dirStr = "go "+dirStr;
        let dirField = document.getElementById("direction")
        dirField.innerText = dirStr;
    }

    function _setWork(work) {
        if(work != null) {
            parent.ShowWork(work.Signature);
        }
    }

    function setWork(work) {
        let img = document.getElementById("gridcontentimage");
        let cnt = document.getElementById("gridcontenttext");
        let detailiframe = document.getElementById("detailiframe")
        if(work != null) {
            cnt.style.visibility = "visible";
            img.src = work.ThumbnailUrl;
            let title = document.getElementById("gridcontenttitle");
            if( work.Year != "" ) {
                title.innerText = work.Title + " (" + work.Year + ")";
            } else {
                title.innerText = work.Title;
            }
            let authors = document.getElementById("gridcontentauthors");
            authors.innerText = work.Authors.join("; ")
            let description = document.getElementById("gridcontentdescription");
            description.innerText = work.Description;
            workActive = true;
            detailiframe.dataset.iframe = work.IFrameUrl;
            signature = work.Signature;
        } else {
            img.src = "";
            cnt.style.visibility = "hidden";
            workActive = false;
            detailiframe.dataset.iframe = "";
        }
    }

    function move(x, y) {
        let half = (lab.Size-1)/2;
        let dirStr = getDirection(x, y);
        switch( dirStr ) {
            case "north":
                if( !lab.North ) dirStr = "";
                break;
            case "south":
                if( !lab.South ) dirStr = "";
                break;
            case "east":
                if( !lab.East ) dirStr = "";
                break;
            case "west":
                if( !lab.West ) dirStr = "";
                break;
            default:
        }
        if( dirStr == "" ) return;
        var xhr = new XMLHttpRequest();
        var url = "move/"+dirStr;
        xhr.open("POST", url, true);
        xhr.setRequestHeader("Content-Type", "application/json");
        xhr.onreadystatechange = function () {
            if (xhr.readyState === 4 && xhr.status === 200) {
                let middle = ((lab.Size-1)/2);
                let json = JSON.parse(xhr.responseText);
                if( json == null ) return;
                lab = json;
                let i = 0;
                for( i = 0; i < lab.Size; i++ ) {
                    let j = 0;
                    for( j = 0; j < lab.Size; j++ ) {
                        let fld = document.getElementById("lab_"+i+"_"+j);
                        let img = fld.firstChild;
                        img.src = "{{.BaseAddr}}img/labyrinth/"+lab.Fields[i][j].Name+".png";
                        if( i == j && i == middle ) {
                            setWork(lab.Fields[i][j].Work)
                        }
                    }
                }
            }
            let dirField = document.getElementById("direction")
            dirField.innerText = "";
        };
        var data = JSON.stringify(lab);
        xhr.send(data);
    }

    let field = null;
    {{range $i, $row := .Lab.Fields}}
        {{range $j, $col := $row}}
            field = document.getElementById("lab_{{$i}}_{{$j}}");
            field.addEventListener("mouseover", function(event) {
                showDirection({{$j}}, {{$i}})
            }, false);
            field.addEventListener("mousedown", function(event) {
                move({{$j}}, {{$i}})
            }, false);
    {{end}}{{end}}
</script>
</body>
</html>
